<!--
   Glazed Lists
   Copyright 2003-2006 publicobject.com, O'Dell Engineering Ltd.
-->

<project name="glazedlists" default="jar" basedir=".">

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
       BUILD ADMINISTRATION
       Create build directories and set up necessary paths.
    - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

    <property name="java.target.version" value="1.5"/>
    <property name="java.target.version.fileFriendlyName" value="java15"/>

	<!-- filter for maven pom.xml -->
	<filter token="glazedlists.version" value="${version}"/>
	<filter token="glazedlists.artifactId" value="glazedlists_${java.target.version.fileFriendlyName}"/>
	
    <property environment="env"/>
    <tstamp prefix="datestamp">
        <format property="dateAndTime" pattern="yyyy-MM-dd H:mm"/>
    </tstamp>

	<!-- base output directory for build artefacts -->
	<property name="target.dir" value="target"/>

	<!-- output directory for compiled classes -->
	<property name="classes.dir" value="${target.dir}/classes"/>

	<!-- output directory for compiled test classes -->
	<property name="testclasses.dir" value="${target.dir}/test-classes"/>

	<!-- output directory for japex reports -->
	<property name="reports.dir" value="${target.dir}/reports"/>

	<!-- output directory for javadocs -->
	<property name="docs.dir" value="${target.dir}/docs"/>

	<!-- output directory for demo jar contents -->
	<property name="demojar.dir" value="${target.dir}/demojar"/>

	<!-- output directory for java 1.4 build -->
	<property name="java14_glazedlists.dir" value="${target.dir}/java14_glazedlists"/>

	<!-- output directory for maven upload bundle -->
	<property name="maven_bundle.dir" value="${target.dir}/maven_bundle"/>

	<target name="clean"
		description="Clean up generated files, forcing them to be rebuilt.">

		<!-- Delete target directory with all generated build artifacts -->
		<delete dir="${target.dir}"/>

		<delete>
			<fileset dir="${basedir}" defaultexcludes="no">
                <!-- Delete temporary files from JEdit -->
				<include name="**/*~"/>
			</fileset>
		</delete>
	</target>


	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	   JAVADOC
	   Construct a browsable API.
	 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

	<target name="docs" depends=""
		description="Scan the source code to generate the Javadoc API.">
		<!-- document all the source -->
        <mkdir dir="${docs.dir}"/>
		<javadoc
			destdir="${docs.dir}/api" author="true" use="true" windowtitle="Glazed Lists" source="${java.target.version}">
			<packageset dir="source"><exclude name="**/impl/**"/><exclude name="**/migrationkit/**"/></packageset>
			<packageset dir="extensions/swt/source"><exclude name="**/impl/**"/><exclude name="**/migrationkit/**"/></packageset>
			<packageset dir="extensions/ktable/source"><exclude name="**/impl/**"/></packageset>
			<packageset dir="extensions/jgoodiesforms/source"><exclude name="**/impl/**"/></packageset>
			<packageset dir="extensions/nachocalendar/source"><exclude name="**/impl/**"/></packageset>
			<packageset dir="extensions/jfreechart/source"><exclude name="**/impl/**"/></packageset>
			<packageset dir="extensions/swinglabs/source"><exclude name="**/impl/**"/></packageset>
            <classpath><fileset dir="extensions/" includes="**/lib/*.jar"/></classpath>
            <link href="http://java.sun.com/j2se/${java.target.version}/docs/api/"/>
            <link href="http://help.eclipse.org/help31/nftopic/org.eclipse.platform.doc.isv/reference/api/"/>
            <link href="http://www.jdocs.com/formlayout/1.0.4/api/" packagelistloc="extensions/jgoodiesforms/lib"/>
            <link href="http://nachocalendar.sourceforge.net/doc/"/>
            <link href="http://www.jfree.org/jfreechart/javadoc/"/>
            <link href="http://download.java.net/javadesktop/swinglabs/releases/0.8/docs/api/"/>

            <doctitle><![CDATA[<h1>Glazed Lists</h1>]]></doctitle>
			<bottom><![CDATA[<a href="http://publicobject.com/glazedlists/" target="_top">Glazed Lists</a>, Copyright &#169; 2003-2006 publicobject.com, O'Dell Engineering.<br>Documentation build by ${user.name} at ${datestamp.dateAndTime}]]></bottom>
		</javadoc>
	</target>


	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	   JAR
	   Construct the .jar file for use in a library.
	 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

	<target name="jar" depends="compileall"
		description="Creates glazedlists jar file containing all UI libraries.">
		<jar destfile="${target.dir}/glazedlists_${java.target.version.fileFriendlyName}.jar" update="true" index="true">
			<fileset dir="${classes.dir}">
                <exclude name="com/publicobject/**"/> <!-- IssuesBrowser -->
            </fileset>
            <fileset dir=".">
				<include name="resources/**"/>
            </fileset>
			<manifest>
				<attribute name="Main-Class" value="ca.odell.glazedlists.impl.Main"/>
				<attribute name="Sealed" value="true"/>
				<attribute name="Built-By" value="${user.name}"/>
				<attribute name="Built-At" value="${datestamp.dateAndTime}"/>
				<attribute name="Implementation-Version" value="${datestamp.dateAndTime}"/>
				<attribute name="Implementation-Title" value="Glazed Lists"/>
				<attribute name="Implementation-URL" value="http://publicobject.com/glazedlists/"/>
				<attribute name="Contributors" value="Jesse Wilson, Kevin Maltby, James Lemieux, Rob Eden, Holger Brands"/>
                <attribute name="Source-Version" value="JDK ${java.target.version}"/>
			</manifest>
		</jar>
	</target>


	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	   COMPILE
	 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

	<target name="compile" depends="core,swing"
		description="Compile the default components of the source.">
	</target>

	<target name="compileall" depends="core,migrationkit,swing,io,swt,ktable,jfreechart,issuesbrowser,swinglabs,treetable"
		description="Compile all components of the source.">
	</target>

	<target name="core" depends="">
		<mkdir dir="${classes.dir}"/>
		<javac destdir="${classes.dir}" srcdir="source" debug="on" source="${java.target.version}" target="${java.target.version}" deprecation="on">
                <!-- swing -->
                <exclude name="**/swing/**"/>
                <!-- io -->
                <exclude name="**/ctp/**"/>
                <exclude name="**/io/**"/>
                <exclude name="**/nio/**"/>
                <exclude name="**/pmap/**"/>
                <exclude name="**/rbp/**"/>
		</javac>
	</target>

    <target name="migrationkit" depends="core">
        <javac destdir="${classes.dir}" srcdir="source" debug="on" source="${java.target.version}" target="${java.target.version}" deprecation="on">
            <include name="**/migrationkit/**"/>
        </javac>
    </target>

	<target name="swing" depends="core">
		<javac destdir="${classes.dir}" srcdir="source" debug="on" source="${java.target.version}" target="${java.target.version}" deprecation="on">
			<include name="**/swing/**"/>
			<exclude name="**/migrationkit/**"/>
		</javac>
	</target>

	<target name="io" depends="core">
		<javac destdir="${classes.dir}" srcdir="source" debug="on" source="${java.target.version}" target="${java.target.version}" deprecation="on">
			<include name="**/ctp/**"/>
			<include name="**/io/**"/>
			<include name="**/nio/**"/>
			<include name="**/pmap/**"/>
			<include name="**/rbp/**"/>
		</javac>
	</target>


    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
       EXTENSIONS
     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

    <target name="swt" depends="core">
        <mkdir dir="extensions/swt/lib"/>
        <java classname="ca.odell.glazedlists.impl.HttpClient">
            <classpath path="${classes.dir}"/>
            <arg value="https://glazedlists.dev.java.net/files/documents/1073/25145/swt-api.jar"/>
            <arg value="extensions/swt/lib/swt-api.jar"/>
        </java>
        <javac destdir="${classes.dir}" srcdir="extensions/swt/source" debug="on" source="${java.target.version}" target="${java.target.version}" deprecation="on">
            <classpath>
                <fileset dir="extensions/swt/lib/" includes="*.jar"/>
            </classpath>
        </javac>
    </target>

    <target name="ktable" depends="core,swt,issuesbrowser">
        <mkdir dir="extensions/ktable/lib"/>
        <java classname="ca.odell.glazedlists.impl.HttpClient">
            <classpath path="${classes.dir}"/>
            <arg value="https://glazedlists.dev.java.net/files/documents/1073/24419/ktable.jar"/>
            <arg value="extensions/ktable/lib/ktable.jar"/>
        </java>
        <javac destdir="${classes.dir}" srcdir="extensions/ktable/source" debug="on" source="${java.target.version}" target="${java.target.version}" deprecation="on">
            <classpath>
                <fileset dir="extensions/ktable/lib/" includes="*.jar"/>
                <fileset dir="extensions/swt/lib/" includes="*.jar"/>
            </classpath>
        </javac>
    </target>

    <target name="jgoodiesforms" depends="core,swing">
        <mkdir dir="extensions/jgoodiesforms/lib"/>
        <java classname="ca.odell.glazedlists.impl.HttpClient">
            <classpath path="${classes.dir}"/>
            <arg value="https://glazedlists.dev.java.net/files/documents/1073/27334/forms.jar"/>
            <arg value="extensions/jgoodiesforms/lib/forms.jar"/>
        </java>
        <javac destdir="${classes.dir}" srcdir="extensions/jgoodiesforms/source" debug="on" source="${java.target.version}" target="${java.target.version}" deprecation="on">
            <classpath>
                <fileset dir="extensions/jgoodiesforms/lib/" includes="*.jar"/>
            </classpath>
        </javac>
    </target>

    <target name="swinglabs" depends="core,swing">
        <!-- the swinglabs .jar is Java 1.5+ only, so we do not bother to run
             this code through our Java 1.5 to Java 1.4 source code translator -->
        <mkdir dir="extensions/swinglabs/lib"/>
        <java classname="ca.odell.glazedlists.impl.HttpClient">
            <classpath path="${classes.dir}"/>
            <arg value="https://glazedlists.dev.java.net/files/documents/1073/32966/swingx.jar"/>
            <arg value="extensions/swinglabs/lib/swingx.jar"/>
        </java>
        <javac destdir="${classes.dir}" srcdir="extensions/swinglabs/source" debug="on" source="${java.target.version}" target="${java.target.version}" deprecation="on">
            <classpath>
                <fileset dir="extensions/swinglabs/lib/" includes="*.jar"/>
            </classpath>
        </javac>
    </target>

    <target name="nachocalendar" depends="core,swing">
        <mkdir dir="extensions/nachocalendar/lib"/>
        <java classname="ca.odell.glazedlists.impl.HttpClient">
            <classpath path="${classes.dir}"/>
            <arg value="https://glazedlists.dev.java.net/files/documents/1073/29958/nachocalendar.jar"/>
            <arg value="extensions/nachocalendar/lib/nachocalendar.jar"/>
        </java>
        <javac destdir="${classes.dir}" srcdir="extensions/nachocalendar/source" debug="on" source="${java.target.version}" target="${java.target.version}" deprecation="on">
            <classpath>
                <fileset dir="extensions/nachocalendar/lib/" includes="*.jar"/>
            </classpath>
        </javac>
    </target>

    <target name="treetable" depends="core,swing">
        <javac destdir="${classes.dir}" srcdir="extensions/treetable/source" debug="on" source="${java.target.version}" target="${java.target.version}" deprecation="on"/>
    </target>

    <target name="jfreechart" depends="swing">
        <mkdir dir="extensions/jfreechart/lib"/>
        <java classname="ca.odell.glazedlists.impl.HttpClient">
            <classpath path="${classes.dir}"/>
            <arg value="https://glazedlists.dev.java.net/files/documents/1073/26197/jcommon.jar"/>
            <arg value="extensions/jfreechart/lib/jcommon.jar"/>
        </java>
        <java classname="ca.odell.glazedlists.impl.HttpClient">
            <classpath path="${classes.dir}"/>
            <arg value="https://glazedlists.dev.java.net/files/documents/1073/26198/jfreechart.jar"/>
            <arg value="extensions/jfreechart/lib/jfreechart.jar"/>
        </java>
        <javac destdir="${classes.dir}" srcdir="extensions/jfreechart/source" debug="on" source="${java.target.version}" target="${java.target.version}" deprecation="on">
            <classpath>
                <fileset dir="extensions/jfreechart/lib/" includes="*.jar"/>
            </classpath>
        </javac>
    </target>

    <target name="japex" depends="compile">
        <!-- download dependencies for japex -->
        <mkdir dir="extensions/japex/lib"/>
        <java classname="ca.odell.glazedlists.impl.HttpClient">
            <classpath path="${classes.dir}"/>
            <arg value="https://glazedlists.dev.java.net/files/documents/1073/37606/activation.jar"/>
            <arg value="extensions/japex/lib/activation.jar"/>
        </java>
        <java classname="ca.odell.glazedlists.impl.HttpClient">
            <classpath path="${classes.dir}"/>
            <arg value="https://glazedlists.dev.java.net/files/documents/1073/37605/japex-all.jar"/>
            <arg value="extensions/japex/lib/japex-all.jar"/>
        </java>
        <java classname="ca.odell.glazedlists.impl.HttpClient">
            <classpath path="${classes.dir}"/>
            <arg value="https://glazedlists.dev.java.net/files/documents/1073/37607/mail.jar"/>
            <arg value="extensions/japex/lib/mail.jar"/>
        </java>
        <!-- compile the Japex performance tests -->
        <javac destdir="${classes.dir}" srcdir="extensions/japex/source" debug="on" source="${java.target.version}" target="${java.target.version}" deprecation="on">
            <classpath>
                <fileset dir="extensions/japex/lib/" includes="*.jar"/>
            </classpath>
        </javac>
        <!-- execute the Japex performance tests -->
    	<!--
        <property name="config" value="extensions/japex/ListEventAssembler-JapexConfig.xml"/>
        <property name="config" value="extensions/japex/ListEventPublisher-JapexConfig.xml"/>
        <property name="config" value="extensions/japex/SortedList-JapexConfig.xml"/>
        -->
        <property name="config" value="extensions/japex/SortedList-JapexConfig.xml"/>
        <java dir="." fork="true" classname="com.sun.japex.Japex">
            <classpath>
                <fileset dir="extensions/japex/lib/" includes="*.jar"/>
            </classpath>
        	<sysproperty key="japex.reportsDirectory" value="${reports.dir}"/>
            <arg line="${config}/"/>
        </java>
    </target>

    <target name="issuesbrowser" depends="core,swing,swt,jfreechart,jgoodiesforms,nachocalendar,treetable">
        <mkdir dir="extensions/issuesbrowser/lib"/>
        <java classname="ca.odell.glazedlists.impl.HttpClient">
            <classpath path="${classes.dir}"/>
            <arg value="https://glazedlists.dev.java.net/files/documents/1073/37509/http.jar"/>
            <arg value="extensions/issuesbrowser/lib/http.jar"/>
        </java>
        <javac destdir="${classes.dir}" srcdir="extensions/issuesbrowser/source" debug="on" source="${java.target.version}" target="${java.target.version}" deprecation="on">
            <classpath>
                <fileset dir="extensions/swt/lib/" includes="*.jar"/>
                <fileset dir="extensions/jfreechart/lib/" includes="*.jar"/>
                <fileset dir="extensions/jgoodiesforms/lib/" includes="*.jar"/>
                <fileset dir="extensions/nachocalendar/lib/" includes="*.jar"/>
                <fileset dir="extensions/issuesbrowser/lib/" includes="*.jar"/>
            </classpath>
        </javac>
    </target>

    <target name="demojar" depends="clean,issuesbrowser"
        description="Create a .jar file with the Issues Browser demo application.">

        <!-- make a temporary folder for assembling the demojar -->
        <mkdir dir="${demojar.dir}"/>

        <!-- copy the classes into the demojar folder -->
        <copy todir="${demojar.dir}">
            <fileset dir="${classes.dir}"/>
        </copy>

        <!-- unjar the third-party classes into the demojar folder -->
        <unjar src="extensions/jfreechart/lib/jcommon.jar" dest="${demojar.dir}"/>
        <unjar src="extensions/jfreechart/lib/jfreechart.jar" dest="${demojar.dir}"/>
        <unjar src="extensions/jgoodiesforms/lib/forms.jar" dest="${demojar.dir}"/>
        <unjar src="extensions/nachocalendar/lib/nachocalendar.jar" dest="${demojar.dir}"/>
        <unjar src="extensions/issuesbrowser/lib/http.jar" dest="${demojar.dir}"/>

        <!-- create a *minimal* set of classes required to execute the swing demo -->
        <classfileset id="demoClasses" dir="${demojar.dir}" rootclass="com.publicobject.issuesbrowser.swing.IssuesBrowser"/>

        <!-- create the actual demo jar -->
        <jar destfile="${target.dir}/glazedlists-demo.jar" update="true" index="true">
            <fileset refid="demoClasses"/>
            <fileset dir="${demojar.dir}">
                <include name="**/LocalizationBundle*.properties"/>
                <include name="org/jfree/chart/resources/JFreeChartResources.class"/>
                <include name="org/jfree/resources/JCommonResources.class"/>
                <include name="net/sf/nachocalendar/language*.properties"/>
            </fileset>
            <fileset dir=".">
                <include name="resources/**"/>
            </fileset>
            <fileset dir="extensions/issuesbrowser">
                <include name="resources/**"/>
            </fileset>
            <manifest>
                <attribute name="Main-Class" value="com.publicobject.issuesbrowser.swing.IssuesBrowser"/>
            </manifest>
        </jar>

        <!-- clean up the demojar folder -->
        <!--<delete dir="${demojar.dir}"/>-->
	</target>


    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	   CREATE JAVA 1.4-COMPATIBLE PROJECT
	   Create a new project folder java14_glazedlists/ that can be used to
	   build and develop Glazed Lists on J2SE 1.4.
     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

    <target name="java14" depends="compileall,compiletests" description="Compile Glazed Lists for deployment on a J2SE 1.4">
        <!-- clean the java14 directory -->
        <delete dir="${java14_glazedlists.dir}"/>

        <!-- download the declawer build tool -->
        <mkdir dir="tools"/>
        <java classname="ca.odell.glazedlists.impl.HttpClient">
            <classpath path="${classes.dir}"/>
            <arg value="https://glazedlists.dev.java.net/files/documents/1073/25249/declawer.jar"/>
            <arg value="tools/declawer.jar"/>
        </java>

        <!-- Declaw source/ -->
        <mkdir dir="${java14_glazedlists.dir}/source"/>
        <java classname="com.publicobject.declawer.Declawer" classpath="tools/declawer.jar">
            <arg value="source"/>
            <arg value="${ant.home}/lib/junit.jar"/>
            <arg value="${java14_glazedlists.dir}/source"/>
        </java>

        <!-- Declaw test/ -->
        <mkdir dir="${java14_glazedlists.dir}/test"/>
        <java classname="com.publicobject.declawer.Declawer" classpath="tools/declawer.jar">
            <arg value="test"/>
            <arg value="${classes.dir}${path.separator}${ant.home}/lib/junit.jar${path.separator}extensions/jgoodiesforms/lib/forms.jar"/>
            <arg value="${java14_glazedlists.dir}/test"/>
        </java>

        <!-- Declaw swt/ -->
        <mkdir dir="${java14_glazedlists.dir}/extensions/swt/source"/>
        <java classname="com.publicobject.declawer.Declawer" classpath="tools/declawer.jar">
            <arg value="extensions/swt/source"/>
            <arg value="${classes.dir}${path.separator}extensions/swt/lib/swt-api.jar"/>
            <arg value="${java14_glazedlists.dir}/extensions/swt/source"/>
        </java>

        <!-- Declaw jfreechart/ -->
        <mkdir dir="${java14_glazedlists.dir}/extensions/jfreechart/source"/>
        <java classname="com.publicobject.declawer.Declawer" classpath="tools/declawer.jar">
            <arg value="extensions/jfreechart/source"/>
            <arg value="${classes.dir}${path.separator}extensions/jfreechart/lib/jcommon.jar${path.separator}extensions/jfreechart/lib/jfreechart.jar"/>
            <arg value="${java14_glazedlists.dir}/extensions/jfreechart/source"/>
        </java>

        <!-- Declaw nachocalendar/ -->
        <mkdir dir="${java14_glazedlists.dir}/extensions/nachocalendar/source"/>
        <java classname="com.publicobject.declawer.Declawer" classpath="tools/declawer.jar">
            <arg value="extensions/nachocalendar/source"/>
            <arg value="${classes.dir}${path.separator}extensions/nachocalendar/lib/nachocalendar.jar"/>
            <arg value="${java14_glazedlists.dir}/extensions/nachocalendar/source"/>
        </java>

        <!-- Declaw jgoodiesforms/ -->
        <mkdir dir="${java14_glazedlists.dir}/extensions/jgoodiesforms/source"/>
        <java classname="com.publicobject.declawer.Declawer" classpath="tools/declawer.jar">
            <arg value="extensions/jgoodiesforms/source"/>
            <arg value="${classes.dir}${path.separator}extensions/jgoodiesforms/lib/forms.jar"/>
            <arg value="${java14_glazedlists.dir}/extensions/jgoodiesforms/source"/>
        </java>

        <!-- Declaw issuesbrowser/ -->
        <mkdir dir="${java14_glazedlists.dir}/extensions/issuesbrowser/source"/>
        <java classname="com.publicobject.declawer.Declawer" classpath="tools/declawer.jar">
            <arg value="extensions/issuesbrowser/source"/>
            <arg value="${classes.dir}${path.separator}extensions/swt/lib/swt-api.jar${path.separator}extensions/jfreechart/lib/jcommon.jar${path.separator}extensions/jfreechart/lib/jfreechart.jar${path.separator}extensions/jgoodiesforms/lib/forms.jar${path.separator}extensions/nachocalendar/lib/nachocalendar.jar"/>
            <arg value="${java14_glazedlists.dir}/extensions/issuesbrowser/source"/>
        </java>

        <!-- Copy all of the resources (non-source files) to the java14 directory. -->
        <copy todir="${java14_glazedlists.dir}">
            <fileset dir=".">
                <exclude name="${target.dir}/**"/>
                <exclude name="**/*.java"/>
                <exclude name="**/*.class"/>
            </fileset>
        </copy>

        <!-- Alter the target platform in the java14 build.xml file from 1.5 to 1.4. -->
        <replace file="${java14_glazedlists.dir}/build.xml" token="&lt;property name=&quot;java.target.version&quot; value=&quot;1.5&quot;/&gt;" value="&lt;property name=&quot;java.target.version&quot; value=&quot;1.4&quot;/&gt;"/>
        <replace file="${java14_glazedlists.dir}/build.xml" token="&lt;property name=&quot;java.target.version.fileFriendlyName&quot; value=&quot;java15&quot;/&gt;" value="&lt;property name=&quot;java.target.version.fileFriendlyName&quot; value=&quot;java14&quot;/&gt;"/>
    </target>


	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	   REDISTRIBUTING THE SOURCE
	   Package the entire Glazed Lists source tree in a .zip file.
	 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

	<target name="dist" depends="clean"
		description="Create a .zip file of the source for backup or distribution.">
		<mkdir dir="${target.dir}"/>
		<zip destfile="${target.dir}/glazedlists-source_${java.target.version.fileFriendlyName}.zip" basedir=".">
			<exclude name="${target.dir}/**"/>
			<exclude name="tools/**"/>
			<exclude name="extensions/**/lib/**"/>
			<exclude name="www/**"/>
			<exclude name="*.iml"/> <!-- Intellij IDEA Module File -->
			<exclude name="*.ipr"/> <!-- Intellij IDEA Project File -->
			<exclude name="*.iws"/> <!-- Intellij IDEA Workspace File -->
			<exclude name="*.tfpt"/> <!-- Performance Test Data (mozillabugs.tfpt, mp3collection.tfpt) -->
		</zip>
	</target>

    <target name="upload" depends="dist,jar"
        description="Upload binaries to java.net, see http://javanettasks.dev.java.net/">

        <!-- download the declawer build tool -->
        <mkdir dir="tools"/>
        <java classname="ca.odell.glazedlists.impl.HttpClient">
            <classpath path="${classes.dir}"/>
            <arg value="https://glazedlists.dev.java.net/files/documents/1073/25945/javanettasks.jar"/>
            <arg value="tools/javanettasks.jar"/>
        </java>

        <!-- prepare the javaNetUpload task -->
        <taskdef resource="org/kohsuke/javanettasks.properties" classpath="tools/javanettasks.jar"/>

        <!-- upload source -->
        <javaNetUpload projectName="glazedlists"
            toFile="/latest_build/glazedlists-source_${java.target.version.fileFriendlyName}.zip"
            fromFile="${target.dir}/glazedlists-source_${java.target.version.fileFriendlyName}.zip"
            fileDescription="Source build by ${user.name} at ${datestamp.dateAndTime}"
            overwrite="yes"
            fileStatus="Draft"/>

        <!-- upload binary -->
        <javaNetUpload projectName="glazedlists"
            toFile="/latest_build/glazedlists_${java.target.version.fileFriendlyName}.jar"
            fromFile="${target.dir}/glazedlists_${java.target.version.fileFriendlyName}.jar"
            fileDescription="Binary build by ${user.name} at ${datestamp.dateAndTime}"
            overwrite="yes"
            fileStatus="Draft"/>
	</target>


    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
       TEST
       Compile unit tests and run them using JUnit.
       This task depends on JUnit, available free at http://www.junit.org
     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->

    <target name="test" depends="compiletests"
            description="Compile unit tests and run them using JUnit.">
           <!-- Execute JUnit tests -->
            <junit printsummary="true" showoutput="false" fork="true"
                    errorProperty="test.failed" failureProperty="test.failed">
                    <assertions>
                    	<enable/>
                    </assertions>
                    <classpath>
                        <pathelement location="${classes.dir}"/>
                        <pathelement location="${testclasses.dir}"/>
                        <fileset dir="extensions" includes="**/*.jar"/>
                        <fileset file="${ant.home}/lib/junit.jar"/>
                    </classpath>
                    <formatter type="brief" usefile="false"/>
                    <batchtest>
                    	<fileset dir="${testclasses.dir}" includes="**/**Test.class"/>
                    </batchtest>
            </junit>
            <fail message="Tests failed. Check test output." if="test.failed"/>
    </target>

    <target name="compiletests" depends="compileall">
        <!-- Verify that JUnit is available on the classpath -->
		<available classname="junit.framework.TestCase" property="junit.present"/>
		<fail unless="junit.present" message="To run this task, install junit.jar and optional.jar into ${ant.home}/lib/ JUnit is available free at http://www.junit.org"/>
		<mkdir dir="${testclasses.dir}"/>
	    <javac destdir="${testclasses.dir}" srcdir="test" debug="on" source="${java.target.version}" target="${java.target.version}" deprecation="on">
            <classpath>
                <pathelement location="${classes.dir}"/>
                <fileset dir="extensions" includes="**/*.jar"/>
                <fileset file="${ant.home}/lib/junit.jar"/>
            </classpath>
        </javac>
    </target>

	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
	   MAVEN-BUNDLE
	   Construct the maven upload bundle.
	   It contains the POM, the main artifact, source and javadoc jar
	 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
	<target name="maven-bundle" depends="jar-sources,jar-javadoc,jar"
		description="Creates glazedlists upload bundle for maven repository.">
		<copy file="pom.xml" todir="${maven_bundle.dir}" filtering="true"/>
		<copy file="${target.dir}/glazedlists_${java.target.version.fileFriendlyName}.jar" tofile="${maven_bundle.dir}/glazedlists_${java.target.version.fileFriendlyName}-${version}.jar"/>
		<jar destfile="${target.dir}/glazedlists_${java.target.version.fileFriendlyName}-${version}-bundle.jar">
            <fileset dir="${maven_bundle.dir}">
				<include name="pom.xml"/>
				<include name="glazedlists_${java.target.version.fileFriendlyName}-${version}.jar"/>
				<include name="glazedlists_${java.target.version.fileFriendlyName}-${version}-sources.jar"/>
				<include name="glazedlists_${java.target.version.fileFriendlyName}-${version}-javadoc.jar"/>
            </fileset>
		</jar>
		<delete dir="${maven_bundle.dir}"/>
	</target>

	<target name="check-version" description="Checks version property">
		<fail unless="version" message="To build a maven upload bundle the property 'version' must be defined."/>
	</target>

	<target name="jar-sources" depends="check-version,dist"
		description="Create a .jar file containing the source files.">
		<mkdir dir="${maven_bundle.dir}"/>
		<copy file="${target.dir}/glazedlists-source_${java.target.version.fileFriendlyName}.zip" tofile="${maven_bundle.dir}/glazedlists_${java.target.version.fileFriendlyName}-${version}-sources.jar"/>
		<jar destfile="${maven_bundle.dir}/glazedlists_${java.target.version.fileFriendlyName}-${version}-sources.jar" update="true"/>
	</target>

	<target name="jar-javadoc" depends="check-version,docs"
		description="Create a .jar file containing the javadoc.">
		<mkdir dir="${maven_bundle.dir}"/>
		<jar destfile="${maven_bundle.dir}/glazedlists_${java.target.version.fileFriendlyName}-${version}-javadoc.jar" basedir="${docs.dir}/api"/>
	</target>
	
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
       M4
       Run the m4 preprocessor to generate source code, see
       Unix: http://www.gnu.org/software/m4/
       Windows; http://gnuwin32.sourceforge.net/packages/m4.htm
     - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <target name="m4">

        <!-- generate the four color tree -->
        <mapper id="bcii_to_fourcolorintermediate" type="glob"
           from="source/ca/odell/glazedlists/impl/adt/barcode2/Bcii*.java"
           to="source/ca/odell/glazedlists/impl/adt/barcode2/FourColor*.java_intermediate"/>
        <apply executable="m4" parallel="false">
            <arg line="--prefix-builtins"/>
            <arg line="-DVAR_COLOUR_COUNT=4"/>
            <arg line="-DVAR_WIDE_NODES=true"/>
            <srcfile/>
            <fileset dir="${basedir}" includes="source/ca/odell/glazedlists/impl/adt/barcode2/Bcii*.java"/>
            <mapper refid="bcii_to_fourcolorintermediate"/>
            <redirector><outputmapper refid="bcii_to_fourcolorintermediate"/></redirector>
        </apply>

        <mapper id="fourcolorintermediate_to_fourcolor" type="glob"
           from="source/ca/odell/glazedlists/impl/adt/barcode2/FourColor*.java_intermediate"
           to="source/ca/odell/glazedlists/impl/adt/barcode2/FourColor*.java"/>
        <apply executable="m4" parallel="false">
            <arg line="--prefix-builtins"/>
            <arg line="-DBciiTree=FourColorTree"/>
            <arg line="-DBciiNode=FourColorNode"/>
            <arg line="-DBciiTreeAsList=FourColorTreeAsList"/>
            <arg line="-DBciiTreeIterator=FourColorTreeIterator"/>
            <srcfile/>
            <fileset dir="${basedir}" includes="source/ca/odell/glazedlists/impl/adt/barcode2/FourColor*.java_intermediate"/>
            <mapper refid="fourcolorintermediate_to_fourcolor"/>
            <redirector><outputmapper refid="fourcolorintermediate_to_fourcolor"/></redirector>
        </apply>

        <!-- generate the simple tree -->
        <mapper id="bcii_to_simpleintermediate" type="glob"
           from="source/ca/odell/glazedlists/impl/adt/barcode2/Bcii*.java"
           to="source/ca/odell/glazedlists/impl/adt/barcode2/Simple*.java_intermediate"/>
        <apply executable="m4" parallel="false">
            <arg line="--prefix-builtins"/>
            <arg line="-DVAR_COLOUR_COUNT=1"/>
            <arg line="-DVAR_WIDE_NODES=false"/>
            <srcfile/>
            <fileset dir="${basedir}" includes="source/ca/odell/glazedlists/impl/adt/barcode2/Bcii*.java"/>
            <mapper refid="bcii_to_simpleintermediate"/>
            <redirector><outputmapper refid="bcii_to_simpleintermediate"/></redirector>
        </apply>

        <mapper id="simpleintermediate_to_simple" type="glob"
           from="source/ca/odell/glazedlists/impl/adt/barcode2/Simple*.java_intermediate"
           to="source/ca/odell/glazedlists/impl/adt/barcode2/Simple*.java"/>
        <apply executable="m4" parallel="false">
            <arg line="--prefix-builtins"/>
            <arg line="-DBciiTree=SimpleTree"/>
            <arg line="-DBciiNode=SimpleNode"/>
            <arg line="-DBciiTreeAsList=SimpleTreeAsList"/>
            <arg line="-DBciiTreeIterator=SimpleTreeIterator"/>
            <srcfile/>
            <fileset dir="${basedir}" includes="source/ca/odell/glazedlists/impl/adt/barcode2/Simple*.java_intermediate"/>
            <mapper refid="simpleintermediate_to_simple"/>
            <redirector><outputmapper refid="simpleintermediate_to_simple"/></redirector>
        </apply>

        <!-- Delete intermediate files -->
        <delete>
            <fileset dir="${basedir}" defaultexcludes="no">
                <include name="source/ca/odell/glazedlists/impl/adt/barcode2/*.java_intermediate"/>
            </fileset>
        </delete>

    </target>

</project>